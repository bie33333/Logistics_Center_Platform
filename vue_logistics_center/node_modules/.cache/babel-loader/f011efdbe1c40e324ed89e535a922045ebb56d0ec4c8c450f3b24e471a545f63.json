{"ast":null,"code":"export default {\n  name: 'Dialog',\n  data() {\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('Please enter your password again'));\n      } else if (value !== this.form.password) {\n        callback(new Error('The password entered twice does not match!'));\n      } else {\n        callback();\n      }\n    };\n    let checkDuplicate = (rule, value, callback) => {\n      // if(this.form.userid){\n      //   return callback();\n      // }\n      // this.$axios.get(this.$httpUrl+\"/user/find/?username=\"+this.form.username).then(res=>res.data).then(res => {\n      //   if(res.code == 200){\n      //     callback(new Error('Account already exist'));\n      //   }else{\n      //     callback();\n      //   }\n      // })\n    };\n    return {\n      centerDialogVisible: false,\n      form: {\n        name: '',\n        password: '',\n        confirmedPassword: '',\n        account: '',\n        phone: '',\n        age: '',\n        sex: '',\n        address: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: 'Please input name',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 10,\n          message: 'The length is between 2 and 10 characters',\n          trigger: 'blur'\n        }, {\n          validator: checkDuplicate,\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'Please input password',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 10,\n          message: 'The length is between 6 and 15 characters',\n          trigger: 'blur'\n        }],\n        confirmedPassword: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        account: [{\n          required: true,\n          message: 'Please input username',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: 'The length is between 3 and 10 characters',\n          trigger: 'blur'\n        }, {\n          validator: checkDuplicate,\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: 'Please input email address',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: 'Please input correct email address',\n          trigger: ['blur', 'change']\n        }],\n        age: [{\n          required: true,\n          message: 'Please input email address',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: 'Please input correct email address',\n          trigger: ['blur', 'change']\n        }],\n        sex: [{\n          required: true,\n          message: 'Please choose sex',\n          trigger: 'change'\n        }],\n        address: [{\n          required: true,\n          message: 'Please input email address',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: 'Please input correct email address',\n          trigger: ['blur', 'change']\n        }]\n      }\n    };\n  },\n  methods: {\n    resetParam() {\n      this.username = '';\n    },\n    addAccount() {\n      this.form.account = '';\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.resetForm();\n      });\n    },\n    resetForm() {\n      this.$refs.form.resetFields();\n    }\n  },\n  mounted: {}\n};","map":{"version":3,"names":["name","data","validatePass2","rule","value","callback","Error","form","password","checkDuplicate","centerDialogVisible","confirmedPassword","account","phone","age","sex","address","rules","required","message","trigger","min","max","validator","type","methods","resetParam","username","addAccount","$nextTick","resetForm","$refs","resetFields","mounted"],"sources":["src/components/common/Dialog.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-dialog\r\n          title=\"\"\r\n          :visible.sync=\"centerDialogVisible\"\r\n          width=\"50%\"\r\n          center>\r\n          <el-form ref=\"form\" :rules=\"rules\" :model=\"form\" label-width=\"100px\">\r\n            <el-form-item label=\"用户姓名\" prop=\"name\">\r\n              <el-input v-model=\"form.name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"用户账户\" prop=\"account\">\r\n                <el-input v-model=\"form.account\"></el-input>\r\n              </el-form-item>\r\n            <el-form-item label=\"用户密码\" prop=\"password\" >\r\n              <el-input v-model=\"form.password\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"确认密码\" prop=\"confirmedPassword\">\r\n              <el-input v-model=\"form.confirmedPassword\" autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"联系电话\" prop=\"phone\">\r\n                <el-input v-model=\"form.phone\"></el-input>\r\n              </el-form-item>\r\n            <el-form-item label=\"年龄\" prop=\"address\">\r\n              <el-input v-model=\"form.age\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"性别\">\r\n                <el-select v-model=\"form.sex\" placeholder=\"请选择性别\">\r\n                  <el-option label=\"男\" value=\"男\"></el-option>\r\n                  <el-option label=\"女\" value=\"女\"></el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n            <el-form-item label=\"Address\" prop=\"address\">\r\n                <el-input v-model=\"form.address\"></el-input>\r\n            </el-form-item>\r\n          </el-form>\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"centerDialogVisible = false\">Cancel</el-button>\r\n            <el-button type=\"primary\">Confirm</el-button>\r\n          </span>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name:'Dialog',\r\n\r\n    data() {\r\n        var validatePass2 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please enter your password again'));\r\n        } else if (value !== this.form.password) {\r\n          callback(new Error('The password entered twice does not match!'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n\r\n      let checkDuplicate =(rule,value,callback) => {\r\n        // if(this.form.userid){\r\n        //   return callback();\r\n        // }\r\n        // this.$axios.get(this.$httpUrl+\"/user/find/?username=\"+this.form.username).then(res=>res.data).then(res => {\r\n        //   if(res.code == 200){\r\n        //     callback(new Error('Account already exist'));\r\n        //   }else{\r\n        //     callback();\r\n        //   }\r\n        // })\r\n      }\r\n\r\n        return {\r\n            centerDialogVisible: false,\r\n            form:{\r\n                name:'',\r\n                password:'',\r\n                confirmedPassword:'',\r\n                account:'',\r\n                phone:'',\r\n                age:'',\r\n                sex:'',\r\n                address:'',\r\n            },\r\n\r\n            rules: {\r\n                name: [\r\n                    { required: true, message: 'Please input name', trigger: 'blur' },\r\n                    { min: 2, max: 10, message: 'The length is between 2 and 10 characters', trigger: 'blur' },\r\n                    { validator: checkDuplicate, trigger: 'blur' }\r\n                ],\r\n\r\n                password: [\r\n                    { required: true, message: 'Please input password', trigger: 'blur' },\r\n                    { min: 6, max: 10, message: 'The length is between 6 and 15 characters', trigger: 'blur' }\r\n                ],\r\n\r\n                confirmedPassword: [\r\n                    { validator: validatePass2, trigger: 'blur' }\r\n                ],\r\n\r\n                account: [\r\n                    { required: true, message: 'Please input username', trigger: 'blur' },\r\n                    { min: 3, max: 10, message: 'The length is between 3 and 10 characters', trigger: 'blur' },\r\n                    { validator: checkDuplicate, trigger: 'blur' }\r\n                ],\r\n\r\n                phone: [\r\n                    { required: true, message: 'Please input email address', trigger: 'blur' },\r\n                    { type: 'email', message: 'Please input correct email address', trigger: ['blur', 'change'] }\r\n                ],\r\n\r\n                age: [\r\n                    { required: true, message: 'Please input email address', trigger: 'blur' },\r\n                    { type: 'email', message: 'Please input correct email address', trigger: ['blur', 'change'] }\r\n                ],\r\n\r\n                sex:[\r\n                { required: true, message: 'Please choose sex', trigger: 'change' },\r\n                ],\r\n\r\n                address: [\r\n                    { required: true, message: 'Please input email address', trigger: 'blur' },\r\n                    { type: 'email', message: 'Please input correct email address', trigger: ['blur', 'change'] }\r\n                ],\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        resetParam(){\r\n            this.username = '';\r\n        },\r\n        addAccount(){\r\n            this.form.account='';\r\n            this.centerDialogVisible = true;\r\n            this.$nextTick(() => {\r\n            this.resetForm();\r\n          })\r\n        },\r\n        resetForm() {\r\n            this.$refs.form.resetFields();\r\n        },\r\n    },\r\n    mounted: {\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.mgb20 {\r\n    margin-bottom: 20px;\r\n}\r\n</style>"],"mappings":"AA6CA;EACAA,IAAA;EAEAC,KAAA;IACA,IAAAC,aAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,IAAA,CAAAC,QAAA;QACAH,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IAEA,IAAAI,cAAA,GAAAA,CAAAN,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACA;IAEA;MACAK,mBAAA;MACAH,IAAA;QACAP,IAAA;QACAQ,QAAA;QACAG,iBAAA;QACAC,OAAA;QACAC,KAAA;QACAC,GAAA;QACAC,GAAA;QACAC,OAAA;MACA;MAEAC,KAAA;QACAjB,IAAA,GACA;UAAAkB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAG,SAAA,EAAAd,cAAA;UAAAW,OAAA;QAAA,EACA;QAEAZ,QAAA,GACA;UAAAU,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QAEAT,iBAAA,GACA;UAAAY,SAAA,EAAArB,aAAA;UAAAkB,OAAA;QAAA,EACA;QAEAR,OAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAG,SAAA,EAAAd,cAAA;UAAAW,OAAA;QAAA,EACA;QAEAP,KAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAI,IAAA;UAAAL,OAAA;UAAAC,OAAA;QAAA,EACA;QAEAN,GAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAI,IAAA;UAAAL,OAAA;UAAAC,OAAA;QAAA,EACA;QAEAL,GAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QAEAJ,OAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAI,IAAA;UAAAL,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAK,OAAA;IACAC,WAAA;MACA,KAAAC,QAAA;IACA;IACAC,WAAA;MACA,KAAArB,IAAA,CAAAK,OAAA;MACA,KAAAF,mBAAA;MACA,KAAAmB,SAAA;QACA,KAAAC,SAAA;MACA;IACA;IACAA,UAAA;MACA,KAAAC,KAAA,CAAAxB,IAAA,CAAAyB,WAAA;IACA;EACA;EACAC,OAAA,GACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}